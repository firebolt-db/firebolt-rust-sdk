name: Release

on:
  workflow_dispatch:
    inputs:
      pre-release-tag:
        required: false
        description: 'Tag for pre-release (optional)'
      major-release:
        required: false
        description: 'Trigger a major release (optional). Leave empty for regular release.'

jobs:
  integration-tests:
    uses: ./.github/workflows/integration-tests.yml
    secrets:
      FIREBOLT_CLIENT_ID: ${{ secrets.FIREBOLT_CLIENT_ID_STG_NEW_IDN }}
      FIREBOLT_CLIENT_SECRET: ${{ secrets.FIREBOLT_CLIENT_SECRET_STG_NEW_IDN }}
      FIREBOLT_DATABASE: ${{ secrets.FIREBOLT_DATABASE }}
      FIREBOLT_ENGINE: ${{ secrets.FIREBOLT_ENGINE }}
      FIREBOLT_ACCOUNT: ${{ secrets.FIREBOLT_ACCOUNT }}

  release:
    needs: integration-tests
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.RELEASE_PAT }}

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
        shell: bash

      - name: Generate new version tag
        id: tag_generation
        uses: ./.github/actions/version-generation
        with:
          old-version: "placeholder"
          prerelease-tag: ${{ inputs.pre-release-tag }}
          major-release: ${{ inputs.major-release }}

      - name: Version bump
        run: |
          sed -i "s/^version = .*/version = \"${{ steps.tag_generation.outputs.new_version }}\"/" Cargo.toml
          git add Cargo.toml
          git commit -m "Automatic version bump to ${{ steps.tag_generation.outputs.new_tag }}"
          git push origin main
        shell: bash

      - name: Publish tag on github
        run: |
          git tag ${{ steps.tag_generation.outputs.new_tag }}
          git push origin ${{ steps.tag_generation.outputs.new_tag }}
        shell: bash

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Login to crates.io
        run: cargo login ${{ secrets.CRATES_IO_TOKEN }}

      - name: Publish to crates.io
        run: cargo publish

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_generation.outputs.new_tag }}
          generate_release_notes: true
          prerelease: ${{ inputs.pre-release-tag != '' }}
